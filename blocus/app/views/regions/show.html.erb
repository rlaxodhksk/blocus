<div class="row">
  <div class="col-md-8" id="map" style=height:550px;"></div>
  <div class="col-md-4" id="sns"></div>
</div>


<%= link_to "만들기", new_blok_path %>
<script>
  var current
  var map
  var current_marker
  var current_pos
  var current_op
  function CenterControl(controlDiv, map) {

    // Set CSS for the control border.
    var controlUI = document.createElement('div');
    controlUI.style.backgroundColor = '#fff';
    controlUI.style.border = '2px solid #fff';
    controlUI.style.borderRadius = '3px';
    controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
    controlUI.style.cursor = 'pointer';
    controlUI.style.marginBottom = '22px';
    controlUI.style.textAlign = 'center';
    controlUI.title = 'GPS'
    controlDiv.appendChild(controlUI);

    // Set CSS for the control interior.
    var controlText = document.createElement('div');
    controlText.style.color = 'rgb(25,25,25)';
    controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
    controlText.style.fontSize = '16px';
    controlText.style.lineHeight = '38px';
    controlText.style.paddingLeft = '5px';
    controlText.style.paddingRight = '5px';
    controlText.innerHTML = '현재위치';
    controlUI.appendChild(controlText);

    // 누르면 현재위치 표시 및 마크 생성
    controlUI.addEventListener('click', function() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };

          current_pos = pos;

          current_marker = new google.maps.Marker({
            position: pos,
            map: map,
          });
          current_op = 1;

          map.setCenter(pos);
          }, function() {
          handleLocationError(true, infoWindow, map.getCenter());

        });
        } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, infoWindow, map.getCenter());
      }
    });

  }

  // 키 누르면 마크 이동
  document.onkeydown = checkKey;

  function checkKey(e) {
    // 현재 위치 표시 될때만 이동됨
    if (current_op == 1){

      e = e || window.event;

      step = 0.005;

      if (e.keyCode == '38') {
        current_pos["lat"] = current_pos["lat"] + step;
        current_marker.setPosition(current_pos);
        map.setCenter(current_pos);
        // up arrow
      }
      else if (e.keyCode == '40') {
        current_pos["lat"] = current_pos["lat"] - step;
        current_marker.setPosition(current_pos);
        map.setCenter(current_pos);
        // down arrow
      }
      else if (e.keyCode == '37') {
        current_pos["lng"] = current_pos["lng"] - step;
        current_marker.setPosition(current_pos);
        map.setCenter(current_pos);
        // left arrow
      }
      else if (e.keyCode == '39') {
        current_pos["lng"] = current_pos["lng"] + step;
        current_marker.setPosition(current_pos);
        map.setCenter(current_pos);
        // right arrow
      }
    }
  }

  function initMap() {
    // Create a map object and specify the DOM element for display.
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 37.551700, lng: 126.919274},
      scrollwheel: false,
      zoom: 15
    });
      var centerControlDiv = document.createElement('div');
      var centerControl = new CenterControl(centerControlDiv, map);

      centerControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.TOP_CENTER].push(centerControlDiv);
    //// Zoom change ////
      
    google.maps.event.addListener(map, 'zoom_changed', function() {
      <% Blok.all.each do |b| %>
        <% unless Info.where(blok_id: b.id).take==nil  %>
          var flag = 1
          rectangle['<%=b.id%>'].setMap();
          if(map.getZoom() <=13) {
            <% if Info.find(b.id).popularity <= 30 %>
              flag = 0
            <% end %>
          }
          if(map.getZoom() ==14) {
            <% if Info.find(b.id).popularity <= 20 %>
              flag = 0
            <% end %>
          }
          if(map.getZoom() ==15) {
            <% if Info.find(b.id).popularity <= 10 %>
              flag = 0
            <% end %>
          }
          if(map.getZoom() >=16) {
            <% if Info.find(b.id).popularity <= 5 %>
              flag = 0
            <% end %>
          }

          if(flag) {
            rectangle['<%=b.id%>'] = new google.maps.Rectangle({
              strokeColor: 'green',
              strokeOpacity: 0.8,
              strokeWeight: 1,
              fillColor: 'green',
              fillOpacity: 0.5,
              map: map,
              bounds: {
                north: Math.floor('<%=b.lat%>'/0.00027)*0.00027,
                south: Math.floor('<%=b.lat%>'/0.00027+1)*0.00027,
                east: Math.floor('<%=b.lng%>'/0.00034+1)*0.00034,
                west: Math.floor('<%=b.lng%>'/0.00034)*0.00034
            }});
            rectangle['<%=b.id%>'].addListener('click', function() {


              <% Blok.all.each do |c| %>
                rectangle['<%=c.id%>'].setOptions({fillColor: 'green'});
              <% end %>

              rectangle['<%=b.id%>'].setOptions({fillColor: 'blue'});


              $('#sns').html("<%= escape_javascript(render partial: 'sns', locals: { info_id: b.id  })%>");
            })
          }
        <% end %>
      <% end %>

    });
    ///////zoom 되기 전///////////////
    var rectangle = []
    <% Blok.all.each do |b| %>
      rectangle['<%=b.id%>'] = new google.maps.Rectangle({
        strokeColor: 'green',
        strokeOpacity: 0.8,
        strokeWeight: 1,
        fillColor: 'green',
        fillOpacity: 0.5,
        map: map,
        bounds: {
          north: Math.floor('<%=b.lat%>'/0.00027)*0.00027,
          south: Math.floor('<%=b.lat%>'/0.00027+1)*0.00027,
          east: Math.floor('<%=b.lng%>'/0.00034+1)*0.00034,
          west: Math.floor('<%=b.lng%>'/0.00034)*0.00034
      }});


      rectangle['<%=b.id%>'].addListener('click', function() {
        <% Blok.all.each do |c| %>
          rectangle['<%=c.id%>'].setOptions({fillColor: 'green'});
        <% end %>
        rectangle['<%=b.id%>'].setOptions({fillColor: 'blue'});
        current = '<%=b.id%>'
        <% if Info.where(id:b.id).take != nil %>
        $('#sns').html("<%= escape_javascript(render partial: 'sns', locals: { info_id: b.id  })%>");
        <% end %>
      })

    <% end %>


    map.addListener('mousemove', function(e) {

      var infowindow = new google.maps.InfoWindow();
      var rectangle = new google.maps.Rectangle({
        strokeColor: '#eeeeee',
        strokeOpacity: 0.8,
        strokeWeight: 1,
        fillColor: 'black',
        fillOpacity: 0.5,
        map: map,
        bounds: {
          north: Math.floor(e.latLng.lat()/0.00027)*0.00027,
          south: Math.floor(e.latLng.lat()/0.00027+1)*0.00027,
          east: Math.floor(e.latLng.lng()/0.00034+1)*0.00034,
          west: Math.floor(e.latLng.lng()/0.00034)*0.00034
      }});
      this.addListener('mousemove', function() {
        rectangle.setMap();
        infowindow.close();
      });
      rectangle.addListener('click', function() {
        rectangle.setOptions({ fillColor: 'red'});
        var ne = rectangle.getBounds().getNorthEast();
        var nw = new google.maps.LatLng(ne.lat()+0.000135,ne.lng()-0.00017);
        infowindow.setContent('<%= escape_javascript(render partial: "infowindows", locals: {} ) %>');
        infowindow.setPosition(nw);
        infowindow.open(map);
        $('#new_blok').append('<input name="blok[lat]" type="hidden" value='+ ne.lat()+'>');
        $('#new_blok').append('<input name="blok[lng]" type="hidden" value='+ ne.lng()+'>');
      });

    });

}
</script>
<script src='https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_KEY'] %>&callback=initMap&libraries=geometry'
  async defer></script>







<h3> <%= @region.name %>로 떠납니다.</h3>
<%= link_to "수정하기", edit_region_path(@region) %>
<%= link_to "삭제하기", region_path(@region), method: 'delete' %>
<%= link_to "전체보기", regions_path %>



